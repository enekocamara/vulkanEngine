<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\NiceTry\</FILEPATH>
      <FILENAME>mve_game_object.h</FILENAME>
      <LINE>21</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'mve::Transform2dComponent::rotation' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>mve::Transform2dComponent::{ctor}</FUNCTION>
    <DECORATED>??0Transform2dComponent@mve@@QEAA@XZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>mve::Transform2dComponent::rotation</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\NiceTry\</FILEPATH>
      <FILENAME>simple_render_system.cpp</FILENAME>
      <LINE>59</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>mve::SimpleRenderSystem::explodingTriangle</FUNCTION>
    <DECORATED>?explodingTriangle@SimpleRenderSystem@mve@@QEAAXPEAUVkCommandBuffer_T@@AEAV?$vector@VMveGameObject@mve@@V?$allocator@VMveGameObject@mve@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\NiceTry\</FILEPATH>
      <FILENAME>simple_render_system.cpp</FILENAME>
      <LINE>59</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>mve::SimpleRenderSystem::explodingTriangle</FUNCTION>
    <DECORATED>?explodingTriangle@SimpleRenderSystem@mve@@QEAAXPEAUVkCommandBuffer_T@@AEAV?$vector@VMveGameObject@mve@@V?$allocator@VMveGameObject@mve@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\NiceTry\</FILEPATH>
      <FILENAME>simple_render_system.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>mve::SimpleRenderSystem::gravityField</FUNCTION>
    <DECORATED>?gravityField@SimpleRenderSystem@mve@@QEAAXPEAUVkCommandBuffer_T@@AEAV?$vector@VMveGameObject@mve@@V?$allocator@VMveGameObject@mve@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\dev\NiceTry\</FILEPATH>
      <FILENAME>simple_render_system.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>mve::SimpleRenderSystem::gravityField</FUNCTION>
    <DECORATED>?gravityField@SimpleRenderSystem@mve@@QEAAXPEAUVkCommandBuffer_T@@AEAV?$vector@VMveGameObject@mve@@V?$allocator@VMveGameObject@mve@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>